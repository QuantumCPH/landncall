<?php


/**
 * This class adds structure of 'companies_customers$' table to 'propel' DatabaseMap object.
 *
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * 05/10/10 11:08:19
 *
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class CompaniesCustomers$MapBuilder implements MapBuilder {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.CompaniesCustomers$MapBuilder';

	/**
	 * The database map.
	 */
	private $dbMap;

	/**
	 * Tells us if this DatabaseMapBuilder is built so that we
	 * don't have to re-build it every time.
	 *
	 * @return     boolean true if this DatabaseMapBuilder is built, false otherwise.
	 */
	public function isBuilt()
	{
		return ($this->dbMap !== null);
	}

	/**
	 * Gets the databasemap this map builder built.
	 *
	 * @return     the databasemap
	 */
	public function getDatabaseMap()
	{
		return $this->dbMap;
	}

	/**
	 * The doBuild() method builds the DatabaseMap
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function doBuild()
	{
		$this->dbMap = Propel::getDatabaseMap(CompaniesCustomers$Peer::DATABASE_NAME);

		$tMap = $this->dbMap->addTable(CompaniesCustomers$Peer::TABLE_NAME);
		$tMap->setPhpName('CompaniesCustomers$');
		$tMap->setClassname('CompaniesCustomers$');

		$tMap->setUseIdGenerator(true);

		$tMap->addPrimaryKey('ID', 'Id', 'INTEGER', true, null);

		$tMap->addColumn('NAME', 'Name', 'VARCHAR', false, 255);

		$tMap->addColumn('VAT_NO', 'VatNo', 'DOUBLE', false, null);

		$tMap->addColumn('EAN_NUMBER', 'EanNumber', 'VARCHAR', false, 255);

		$tMap->addColumn('ADDRESS', 'Address', 'VARCHAR', false, 255);

		$tMap->addColumn('POST_CODE', 'PostCode', 'DOUBLE', false, null);

		$tMap->addColumn('COUNTRY_ID', 'CountryId', 'DOUBLE', false, null);

		$tMap->addColumn('CITY_ID', 'CityId', 'DOUBLE', false, null);

		$tMap->addColumn('CONTACT_NAME', 'ContactName', 'VARCHAR', false, 255);

		$tMap->addColumn('EMAIL', 'Email', 'VARCHAR', false, 255);

		$tMap->addColumn('HEAD_PHONE_NUMBER', 'HeadPhoneNumber', 'DOUBLE', false, null);

		$tMap->addColumn('FAX_NUMBER', 'FaxNumber', 'DOUBLE', false, null);

		$tMap->addColumn('WEBSITE', 'Website', 'VARCHAR', false, 255);

		$tMap->addColumn('STATUS_ID', 'StatusId', 'VARCHAR', false, 255);

		$tMap->addColumn('COMPANY_SIZE_ID', 'CompanySizeId', 'VARCHAR', false, 255);

		$tMap->addColumn('COMPANY_TYPE_ID', 'CompanyTypeId', 'VARCHAR', false, 255);

		$tMap->addColumn('CUSTOMER_TYPE_ID', 'CustomerTypeId', 'VARCHAR', false, 255);

		$tMap->addColumn('CPR_NUMBER', 'CprNumber', 'VARCHAR', false, 255);

		$tMap->addColumn('APARTMENT_FORM_ID', 'ApartmentFormId', 'VARCHAR', false, 255);

		$tMap->addColumn('INVOICE_METHOD_ID', 'InvoiceMethodId', 'VARCHAR', false, 255);

		$tMap->addColumn('ACCOUNT_MANAGER_ID', 'AccountManagerId', 'VARCHAR', false, 255);

		$tMap->addColumn('AGENT_COMPANY_ID', 'AgentCompanyId', 'VARCHAR', false, 255);

		$tMap->addColumn('CREATED_AT', 'CreatedAt', 'TIMESTAMP', false, null);

		$tMap->addColumn('CONFIRMED_AT', 'ConfirmedAt', 'TIMESTAMP', false, null);

		$tMap->addColumn('CVR_NUMBER', 'CvrNumber', 'VARCHAR', false, 255);

		$tMap->addColumn('SIM_CARD_DISPATCH_DATE', 'SimCardDispatchDate', 'TIMESTAMP', false, null);

		$tMap->addColumn('PACKAGE_ID', 'PackageId', 'DOUBLE', false, null);

		$tMap->addColumn('REGISTRATION_DISCOUNT_PC', 'RegistrationDiscountPc', 'DOUBLE', false, null);

		$tMap->addColumn('USAGE_DISCOUNT_PC', 'UsageDiscountPc', 'DOUBLE', false, null);

	} // doBuild()

} // CompaniesCustomers$MapBuilder
